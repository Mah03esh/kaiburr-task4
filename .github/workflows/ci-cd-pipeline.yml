name: Kaiburr CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

env:
  BACKEND_IMAGE: kaiburr-backend
  FRONTEND_IMAGE: kaiburr-frontend

jobs:
  # ============================================
  # Job 1: Backend CI (Java/Spring Boot)
  # ============================================
  backend-ci:
    name: Backend CI - Build & Docker
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      - name: Code Build - Maven
        working-directory: ./task1
        run: |
          echo "üî® Building Java Backend with Maven..."
          mvn clean package -DskipTests
          echo "‚úÖ Maven build completed!"
          ls -lh target/*.jar

      - name: Docker Build - Backend
        working-directory: ./task1
        run: |
          echo "üê≥ Building Docker image for Backend..."
          docker build -t ${{ env.BACKEND_IMAGE }}:${{ github.run_number }} .
          docker build -t ${{ env.BACKEND_IMAGE }}:latest .
          echo "‚úÖ Docker image built successfully!"

      - name: Docker Push - Simulate
        run: |
          echo "=========================================="
          echo "üöÄ DOCKER PUSH SIMULATION - BACKEND"
          echo "=========================================="
          echo "Image Tag 1: ${{ env.BACKEND_IMAGE }}:${{ github.run_number }}"
          echo "Image Tag 2: ${{ env.BACKEND_IMAGE }}:latest"
          echo "Registry: docker.io/${{ github.repository_owner }}"
          echo "Full Image: docker.io/${{ github.repository_owner }}/${{ env.BACKEND_IMAGE }}:${{ github.run_number }}"
          echo "‚úÖ Image build and tag successful!"
          echo "=========================================="

      - name: Upload Backend Artifact
        uses: actions/upload-artifact@v4
        with:
          name: backend-jar
          path: task1/target/*.jar
          retention-days: 7

  # ============================================
  # Job 2: Frontend CI (React/TypeScript)
  # ============================================
  frontend-ci:
    name: Frontend CI - Build & Docker
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: task3/package-lock.json

      - name: Code Build - npm
        working-directory: ./task3
        run: |
          echo "üì¶ Installing dependencies..."
          npm ci
          echo "üî® Building React Frontend..."
          npm run build
          echo "‚úÖ Frontend build completed!"
          ls -lh dist/

      - name: Docker Build - Frontend
        working-directory: ./task3
        run: |
          echo "üê≥ Building Docker image for Frontend..."
          docker build -t ${{ env.FRONTEND_IMAGE }}:${{ github.run_number }} .
          docker build -t ${{ env.FRONTEND_IMAGE }}:latest .
          echo "‚úÖ Docker image built successfully!"

      - name: Docker Push - Simulate
        run: |
          echo "=========================================="
          echo "üöÄ DOCKER PUSH SIMULATION - FRONTEND"
          echo "=========================================="
          echo "Image Tag 1: ${{ env.FRONTEND_IMAGE }}:${{ github.run_number }}"
          echo "Image Tag 2: ${{ env.FRONTEND_IMAGE }}:latest"
          echo "Registry: docker.io/${{ github.repository_owner }}"
          echo "Full Image: docker.io/${{ github.repository_owner }}/${{ env.FRONTEND_IMAGE }}:${{ github.run_number }}"
          echo "‚úÖ Image build and tag successful!"
          echo "=========================================="

      - name: Upload Frontend Artifact
        uses: actions/upload-artifact@v4
        with:
          name: frontend-dist
          path: task3/dist
          retention-days: 7

  # ============================================
  # Job 3: Summary Report
  # ============================================
  summary:
    name: Pipeline Summary
    runs-on: ubuntu-latest
    needs: [backend-ci, frontend-ci]
    if: always()

    steps:
      - name: Generate Summary Report
        run: |
          echo "==========================================="
          echo "üéØ KAIBURR CI/CD PIPELINE SUMMARY"
          echo "==========================================="
          echo "üìÖ Date: $(date '+%Y-%m-%d %H:%M:%S')"
          echo "üî¢ Run Number: ${{ github.run_number }}"
          echo "üåø Branch: ${{ github.ref_name }}"
          echo "üë§ Triggered by: ${{ github.actor }}"
          echo "üìù Commit: ${{ github.sha }}"
          echo ""
          echo "üìä Job Status:"
          echo "  Backend CI: ${{ needs.backend-ci.result }}"
          echo "  Frontend CI: ${{ needs.frontend-ci.result }}"
          echo ""
          echo "üê≥ Docker Images:"
          echo "  ${{ env.BACKEND_IMAGE }}:${{ github.run_number }}"
          echo "  ${{ env.FRONTEND_IMAGE }}:${{ github.run_number }}"
          echo "==========================================="
